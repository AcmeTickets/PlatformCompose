name: CI-CD Pipeline


permissions:
  contents: read
  packages: write
  id-token: write
  
on:
  push:
    paths:
      - 'src/Api/**'
      - 'src/Message/**'
  workflow_dispatch:

env:
  RESOURCE_GROUP: acmetickets-rg

jobs:
  build-and-publish-api:
    uses: AcmeTickets/.github/.github/workflows/Build and Publish Docker Image.yml@main
    secrets: inherit
    with:
      project_path: src/Api/Api.csproj
      dockerfile_path: src/Api/Dockerfile
      image_name: ghcr.io/acmetickets/platformcomp-api
      target_port: 5001

  deploy-api:
    needs: build-and-publish-api
    runs-on: ubuntu-latest
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to Azure Container App
        env:
          IMAGE: ${{ needs.build-and-publish-api.outputs.image_tag }}
        run: |
          az containerapp update \
            --name platformcomp-api \
            --resource-group "$RESOURCE_GROUP" \
            --image "$IMAGE" \
            --set-env-vars ASPNETCORE_ENVIRONMENT=Production AzureServiceBus__FullyQualifiedNamespace=acmeticketsasb.servicebus.windows.net COSMOSDB_ACCOUNT=platformcomposedb CosmosDb__DatabaseName=PlatformCompose CosmosDb__ContainerName=Events CosmosDb__AccountEndpoint=https://platformcomposedb.documents.azure.com:443/

  build-and-publish-message:
    uses: AcmeTickets/.github/.github/workflows/Build and Publish Docker Image.yml@main
    secrets: inherit
    with:
      project_path: src/Message/Message.csproj
      dockerfile_path: src/Message/Dockerfile
      image_name: ghcr.io/acmetickets/platformcomp-msg
      # If there is a port for message, use 5002
      # If there is a Cosmos DB account, use {{cosmosdb_account}}

  deploy-message:
    needs: build-and-publish-message
    runs-on: ubuntu-latest
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to Azure Container App
        env:
          IMAGE: ${{ needs.build-and-publish-message.outputs.image_tag }}
        run: |
          az containerapp update \
            --name platformcomp-msg \
            --resource-group "$RESOURCE_GROUP" \
            --image "$IMAGE" \
            --set-env-vars ASPNETCORE_ENVIRONMENT=Production AzureServiceBus__FullyQualifiedNamespace=acmeticketsasb.servicebus.windows.net COSMOSDB_ACCOUNT=platformcomposedb CosmosDb__DatabaseName=PlatformCompose CosmosDb__ContainerName=Events CosmosDb__AccountEndpoint=https://platformcomposedb.documents.azure.com:443/